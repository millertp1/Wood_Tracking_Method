```{r}
#Read in Accepted Mircotag scan criteria, the approved microtag layers, input criteria and supplier indentifer
library(readr)
aMtdat <- read_csv("data/Microtag_Scan_Key.csv")
View(aMtdat)

#Read in Mircotag scan, the microtag layers, input criteria and supplier indentifer
Msdat<- read_csv("data/Sawmill_Mircotag_Scan.csv")
View(Msdat)
#M <- (microtag scan data)
#Ci <- (input criteria)
#Si <- (supplier identifier)
```

```{r}
#Set columns as factors; categorical variables enter into statistical models differently than continuous variables, storing data as factors insures that the modeling functions will treat such data correctly 
M <- as.factor(Msdat$M)
aM <- as.factor(aMtdat$aM)
Ci <- as.factor(Msdat$Ci)
aCi <- as.factor(aMtdat$aCi)
Si <- as.factor(Msdat$Si)
aSi <- as.factor(aMtdat$aSi)
```

```{r}
#Satisfying log criteria, the microtag data must match the approved microtaggnant QR code criteria
#LogCondition <- (aM, aCi, aSi)
LogCondition1 <- (M %in% aM & Si %in% aSi & Ci %in% aCi) 
LogCondition2 <- (M %!in% aM & Si %in% aSi & Ci %in% aCi) 
LogCondition3 <- (M %in% aM & Si %!in% aSi & Ci %in% aCi) 
LogCondition4 <- (M %!in% aM & Si %in% aSi & Ci %!in% aCi) 
```

```{r}
#M <- (microtag scan data)
M %in% aM
which(M %in% aM)
ifelse (M %in% aM,"Accepted Microtag","Not Accepted Microtag")

#Ci <- (input criteria)
Ci %in% aCi
which(Ci %in% aCi)
ifelse(condition, do_if_true, do_if_false)
ifelse (Ci %in% aCi,"Accepted Criteria","Not Accepted Criteria")

#Si <- (supplier identifier)
Si %in% aSi
which(Si %in% aSi)
ifelse (Si %in% aSi,"Accepted Supplier Identifier","Not Accepted")
```

```{r}
#Check Log Condition, Log Condition 1 is the only acceptable condition to record and store logs in the blockcahin. 
LogCondition1 <- ifelse (M %in% aM & Si %in% aSi & Ci %in% aCi, "Log Condition Met", "Revert") 
LogCondition1                       

#Both batches of logs sent from the forester match the accepted Mircotag scan criteria. The phyiscal and log tokens can be consumed by sawmill. 
```

```{r}
#Non-Log Condition 1 will fail/revert
'%!in%' <- function(x,y)!('%in%'(x,y))

LogCondition2 <- ifelse (M %!in% aM, "Failed Microtag", "Revert") 
LogCondition2


LogCondition3 <- ifelse ( Si %!in% aSi, "Failed Supplier Identifier", "Revert") 
LogCondition3

LogCondition4 <- ifelse (Ci %!in% aCi, "Failed Input Criteria", "Revert") 
LogCondition4
```

```{r}
#CONDITION FUNCTIONS LISTED 
LogCondition1 
LogCondition2 
LogCondition3 
LogCondition4  
LogCondition5
```
